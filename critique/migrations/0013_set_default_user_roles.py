# Generated by Django 5.2.1 on 2025-05-24 19:00

from django.db import migrations
from django.contrib.auth.hashers import make_password


def set_default_roles(apps, schema_editor):
    """
    Set default roles for existing users:
    - Superusers become ADMIN
    - Staff users become MODERATOR
    - Regular users remain USER (default)
    """
    Profile = apps.get_model('critique', 'Profile')
    User = apps.get_model('auth', 'User')
    
    # Set roles for existing users based on permissions
    for user in User.objects.all():
        # Get or create profile for each user
        profile, created = Profile.objects.get_or_create(
            user=user,
            defaults={
                'role': 'USER'
            }
        )
        
        # Update role based on user permissions
        if user.is_superuser:
            profile.role = 'ADMIN'
        elif user.is_staff:
            profile.role = 'MODERATOR'
        else:
            profile.role = 'USER'  # This is redundant since it's the default, but included for clarity
        
        profile.save()
    
    # Create an admin user if none exists
    if not User.objects.filter(is_superuser=True).exists():
        admin_user = User.objects.create(
            username='admin',
            email='admin@brushup.example.com',
            password=make_password('adminpassword'),  # Set a secure password in production
            is_staff=True,
            is_superuser=True
        )
        
        # Create a profile for the admin user with the ADMIN role
        admin_profile, created = Profile.objects.get_or_create(
            user=admin_user,
            defaults={
                'role': 'ADMIN'
            }
        )
        admin_profile.role = 'ADMIN'
        admin_profile.save()


def reverse_migration(apps, schema_editor):
    """
    No specific reverse action needed as removing the role field
    would be handled by reversing the previous migration.
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('critique', '0012_profile_role_delete_review'),
    ]

    operations = [
        migrations.RunPython(set_default_roles, reverse_migration),
    ]
