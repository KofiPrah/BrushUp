# Generated by Django 5.2.1 on 2025-07-01 20:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('critique', '0018_add_critique_version_association'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AchievementBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the achievement badge', max_length=100, unique=True)),
                ('description', models.TextField(help_text='Description of what this badge represents')),
                ('category', models.CharField(choices=[('artwork', 'Artwork'), ('critique', 'Critique'), ('community', 'Community'), ('milestone', 'Milestone'), ('special', 'Special')], help_text='Category this badge belongs to', max_length=20)),
                ('tier', models.CharField(choices=[('bronze', 'Bronze'), ('silver', 'Silver'), ('gold', 'Gold'), ('platinum', 'Platinum')], help_text='Tier/rarity of this badge', max_length=20)),
                ('icon', models.CharField(help_text='Bootstrap icon class for this badge', max_length=50)),
                ('color', models.CharField(help_text='CSS color class for this badge', max_length=20)),
                ('criteria_type', models.CharField(help_text="Type of criteria (e.g., 'artwork_count', 'karma_points')", max_length=50)),
                ('criteria_value', models.IntegerField(help_text='Threshold value for earning this badge')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this badge can be earned')),
                ('is_hidden', models.BooleanField(default=False, help_text='Whether this badge is visible to users')),
                ('sort_order', models.PositiveIntegerField(default=0, help_text='Display order for this badge')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Achievement Badge',
                'verbose_name_plural': 'Achievement Badges',
                'ordering': ['category', 'tier', 'sort_order'],
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('context_data', models.JSONField(blank=True, help_text='Additional context about earning this badge', null=True)),
                ('notification_sent', models.BooleanField(default=False, help_text='Whether user was notified about earning this badge')),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_by', to='critique.achievementbadge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Achievement',
                'verbose_name_plural': 'User Achievements',
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'badge')},
            },
        ),
    ]
