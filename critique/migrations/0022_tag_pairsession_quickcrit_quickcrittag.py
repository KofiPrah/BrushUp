# Generated by Django 5.2.1 on 2025-08-12 18:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('critique', '0021_add_current_version_pointer'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text="The tag label (e.g., 'strong focal point', 'muddy values')", max_length=64, unique=True)),
                ('polarity', models.CharField(choices=[('PRO', 'Pro'), ('CON', 'Con')], help_text='Whether this is a positive (Pro) or constructive (Con) tag', max_length=3)),
                ('category', models.CharField(blank=True, help_text="Category like 'composition', 'technique', 'concept'", max_length=32)),
                ('is_system', models.BooleanField(default=False, help_text='System-provided tags vs user-created tags')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Critique Tag',
                'verbose_name_plural': 'Critique Tags',
                'ordering': ['polarity', 'category', 'label'],
            },
        ),
        migrations.CreateModel(
            name='PairSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('counter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counter_sessions', to='critique.artwork')),
                ('spotlight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spotlight_sessions', to='critique.artwork')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pair_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pair Session',
                'verbose_name_plural': 'Pair Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuickCrit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, help_text='Optional detailed note from the critic')),
                ('summary', models.TextField(blank=True, help_text='AI-generated summary if note is blank')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('artwork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quick_crits', to='critique.artwork')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quick_crits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Quick Critique',
                'verbose_name_plural': 'Quick Critiques',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuickCritTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quickcrit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qc_tags', to='critique.quickcrit')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quick_crits', to='critique.tag')),
            ],
            options={
                'verbose_name': 'Quick Critique Tag',
                'verbose_name_plural': 'Quick Critique Tags',
                'unique_together': {('quickcrit', 'tag')},
            },
        ),
    ]
